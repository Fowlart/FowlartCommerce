package com.fowlart.main

import com.fowlart.main.in_mem_catalog.Item
import com.fowlart.main.state.{BotVisitor, Order, ScalaBotVisitor}
import org.telegram.telegrambots.meta.api.methods.send.SendMessage
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup

import java.util.regex.Pattern
import scala.collection.JavaConverters._

class ScalaHelper {

  def buildSimpleReplyMessage(userId: Long, text: String, markUp: InlineKeyboardMarkup): SendMessage = {

    SendMessage
      .builder
      .chatId(userId)
      .text(text)
      .replyMarkup(markUp)
      .build
  }

  def getBucketMessageForScalaBotVisitor(visitor: ScalaBotVisitor,
                                         userId: String,
                                         keyboardHelper: KeyboardHelper): SendMessage = {

    getBucketMessage(BotVisitorToScalaBotVisitorConverter.convertToJavaBotVisitor(visitor),userId,keyboardHelper)
  }
  def getBucketMessage(visitor: BotVisitor,
                       userId: String,
                       keyboardHelper: KeyboardHelper): SendMessage = {

    val itemList = visitor.getBucket.asScala.filter(it => it != null).map(item => s"$item").toList
    val textInBucket = if (itemList.isEmpty) "[–ö–æ—Ä–∑–∏–Ω–∞ –ø–æ—Ä–æ–∂–Ω—è]" else itemList.reduce((i1, i2) => s"$i1\n\n$i2")

    SendMessage.builder.chatId(userId)
      .text(
        s"""
           |–ö–æ—Ä–∑–∏–Ω–∞:
           |
           |$textInBucket
           |""".stripMargin)
      .replyMarkup(keyboardHelper.buildBucketKeyboardMenu).build
  }

  def isNumeric(strNum: String): Boolean = {
    val pattern = Pattern.compile("-?\\d+")
    if (strNum == null) return false
    pattern.matcher(strNum).matches
  }

  def isPhoneNumber(strNum: String): Boolean = {
    val pattern = Pattern.compile("^\\d{3}-\\d{3}-\\d{4}$")
    if (strNum == null) return false
    pattern.matcher(strNum).matches
  }

  def getSubMenuText(itemList: java.util.List[Item], group: String): Array[String] = {
    val maxItemsPerReply = 15
    val itemSeq = itemList.asScala.filter(item=>group.equals(item.group()))
    // ordering for pretty printing
    implicit val orderingForItem: Ordering[Item] = (x: Item, y: Item) =>
      x.name().trim.length.compareTo(y.name().trim.length)
    val reOrderedList = itemSeq.sorted
    val grouped = reOrderedList.grouped(maxItemsPerReply)
    val res = grouped.toList.filter(it => it.nonEmpty).map(it => {
      it.map(item =>
        s"""
           |‚è∫ ${item.name.trim.toLowerCase}
           |üí≥${item.price} –≥—Ä–Ω
           |‚è©/${item.id}
           |""".stripMargin).reduce((v1, v2) => s"$v1$v2")
    })
    res.toArray
  }

  def getEmailOrderText(order: Order): String = {
    s"""
       |<br/><b>–î–∞—Ç–∞:</b> ${order.date}
       |
       |<br/><b>ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:</b> ${order.userId}
       |
       |<br/><b>ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:</b> ${order.orderId}
       |
       |<br/><b>–Ü–º'—è:</b> ${order.userName}
       |
       |<br/><b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É:</b> ${order.userPhoneNumber}
       |
       |<H3 style="color: green">–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è:</H3>
       |   ${order.orderBucket.map(it=>s"""${it.toString}""").reduce((s1,s2)=>s"$s1<br/>$s2")}
       |
       |""".stripMargin
  }

  def getNameEditingText(userId: Long): String = {

    s"""| üòé–î–∞–Ω–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ $userId/–ü–Ü–ë:
        |
        |–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–∑–≤—ñ—Ç—å—Å—è. –ö—Ä–∞—â–µ –¥–æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏—Å—è —Ñ–æ—Ä–º–∞—Ç—É:
        |–ü—Ä—ñ–∑–≤–∏—â–µ –Ü–º'—è.
        |–£–≤–∞–≥–∞, –º–∏ –Ω–µ –±—É–¥–µ–º–æ –Ω–∞–º–∞–≥–∞—Ç–∏—Å—è –≤–∞–ª—ñ–¥—É–≤–∞—Ç–∏ –≤–≤–µ–¥–µ–Ω–∏–π —Ç–µ–∫—Å—Ç.
        |""".stripMargin
  }

  def getPhoneEditingText(userId: Long): String = {

    s"""| üòé–î–∞–Ω–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ $userId/—Ç–µ–ª–µ—Ñ–æ–Ω:
        |
        | –í–≤–µ–¥—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É
        | –≤ –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ:
        | xxx-xxx-xxxx
        |""".stripMargin
  }
  def getPersonalDataEditingSectionText(botVisitor: BotVisitor): String = {

    val phoneNumber = if (botVisitor.getPhoneNumber==null) "" else botVisitor.getPhoneNumber

    s"""| üòé
        | ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:
        | ${botVisitor.getUserId}
        |
        | –Ü–º'—è/–ü—Ä—ñ–∑–≤–∏—â–µ:
        | ${if (botVisitor.getName!=null) botVisitor.getName else botVisitor.getUser.getFirstName}
        |
        | –¢–µ–ª—Ñ–æ–Ω:
        | $phoneNumber
        |""".stripMargin
  }
  def getMainMenuText(name: String): String ={
    s"""|–ü—Ä–∏–≤—ñ—Ç, $name!
        |
        |–¶–µ –±–æ—Ç –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤, –Ω–∞—Ç–∏—Å–∫–∞–π –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –ø–æ –º–µ–Ω—é.
        |–ê–±–æ –ø—Ä–æ–¥–æ–≤–∂—É–π—Ç–µ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é –ø–æ –∫–∞—Ç–∞–ª–æ–≥—É, —á–∏ –∑–∞–º–æ–≤–ª—è–π—Ç–µ —Ç–æ–≤–∞—Ä–∏, –Ω–∞—Ç–∏—Å–∫–∞—é—á–∏
        |—ó—Ö ID –Ω–æ–º–µ—Ä.
        |
        |–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç–µ–π –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –≤ –∫–æ—Ä–∑–∏–Ω—ñ.""".stripMargin}

  def getPhoneNumberReceivedText(name: String): String = {
    s"""|–î—è–∫—É—î–º–æ. –ù–æ–º–µ—Ä –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ –æ—Å–æ–±–∏—Å—Ç–∏–π –ø—Ä–æ—Ñ—ñ–ª—å.""".stripMargin
  }

  def getFullNameReceivedText(name: String): String = {
    s"""|–î—è–∫—É—î–º–æ. –Ü–º'—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ –æ—Å–æ–±–∏—Å—Ç–∏–π –ø—Ä–æ—Ñ—ñ–ª—å.""".stripMargin
  }

  def getItemQtyWrongEnteredNumber(botVisitor: ScalaBotVisitor): String = {
    s"""|–í–≤–µ–¥–µ–Ω–µ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ —á–∏—Å–ª–æ –≤
        |—Ä–µ–∂–∏–º—ñ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ.
        |–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥–∏ —Ü—ñ–ª–µ –ø–æ–∑–∏—Ç–∏–≤–Ω–µ —á–∏—Å–ª–æ.
        |
        |–¢–û–í–ê–†, –©–û –†–ï–î–ê–ì–£–Ñ–¢–¨–°–Ø:
        |${botVisitor.itemToEditQty}
        |""".stripMargin
  }


    def getItemAcceptedText(item: Item): String = {
      s"""
         |–î–æ–¥–∞–Ω–æ:
         |
         |${item.toString}
         |
         |–ü–æ–¥–∞–ª—å—à–µ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è —É –∫–æ—Ä–∑–∏–Ω—ñ.
         |""".stripMargin
    }

  def getItemNotAcceptedText(): String = {
    s"""
       |–í–∏ –∞–±–æ –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ ID,
       |–∞–±–æ –¥–æ–¥–∞—Ç–∫–æ–≤–∏–π —Ç–µ–∫—Å—Ç –∫—Ä—ñ–º —Å–∞–º–æ–≥–æ ID —Ç–æ–≤–∞—Ä—É
       |–∞–±–æ –∑—Ä–æ–±–∏–ª–∏ —â–æ—Å—å —Ç–∞–∫–µ, —á–æ–≥–æ –º–∏ –Ω–µ –ø–µ—Ä–µ–¥–±–∞—á–∏–ª–∏.
       |–°–ø—Ä–æ–±—É–π—Ç–µ, –±—É–¥—å-–ª–∞—Å–∫–∞ —â–µ —Ä–∞–∑–æ–∫.
       |""".stripMargin
  }

  def getEditItemQtyMsg(item: Item): String =
    s"""
       |–¢–û–í–ê–†, –©–û –†–ï–î–ê–ì–£–Ñ–¢–¨–°–Ø::
       |
       |$item
       |
       |–í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—É —Ü—ñ–ª–∏–º –ø–æ–∑–∏—Ç–∏–≤–Ω–∏–º —á–∏—Å–ª–æ–º.
       |
       |/remove - –≤–∏–¥–∞–ª–∏—Ç–∏ –∑ –∫–æ—Ä–∑–∏–Ω–∏.
       |""".stripMargin

  def getContactsMsg(): String =
    s"""
       |–í–ª–∞—Å–Ω–∏–∫: –ê–Ω–¥—Ä—ñ–π –°–∫—ñ—Ä–∞ –í–æ–ª–æ–¥–∏–º–∏—Ä–æ–≤–∏—á
       |—Ç–µ–ª: 097-257-0077
       |""".stripMargin

}
